#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="cdjam")]
public partial class DataClassesDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region Extensibility Method Definitions
  partial void OnCreated();
  partial void Insertdata(data instance);
  partial void Updatedata(data instance);
  partial void Deletedata(data instance);
  partial void InsertfoodWaste(foodWaste instance);
  partial void UpdatefoodWaste(foodWaste instance);
  partial void DeletefoodWaste(foodWaste instance);
  partial void InsertProject(Project instance);
  partial void UpdateProject(Project instance);
  partial void DeleteProject(Project instance);
  partial void Insertdomain(domain instance);
  partial void Updatedomain(domain instance);
  partial void Deletedomain(domain instance);
  #endregion
	
	public DataClassesDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["cdjamConnectionString"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<data> datas
	{
		get
		{
			return this.GetTable<data>();
		}
	}
	
	public System.Data.Linq.Table<foodWaste> foodWastes
	{
		get
		{
			return this.GetTable<foodWaste>();
		}
	}
	
	public System.Data.Linq.Table<Project> Projects
	{
		get
		{
			return this.GetTable<Project>();
		}
	}
	
	public System.Data.Linq.Table<domain> domains
	{
		get
		{
			return this.GetTable<domain>();
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.data")]
public partial class data : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _DataID;
	
	private int _data1;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDataIDChanging(int value);
    partial void OnDataIDChanged();
    partial void Ondata1Changing(int value);
    partial void Ondata1Changed();
    #endregion
	
	public data()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataID", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int DataID
	{
		get
		{
			return this._DataID;
		}
		set
		{
			if ((this._DataID != value))
			{
				this.OnDataIDChanging(value);
				this.SendPropertyChanging();
				this._DataID = value;
				this.SendPropertyChanged("DataID");
				this.OnDataIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="data", Storage="_data1", DbType="Int NOT NULL")]
	public int data1
	{
		get
		{
			return this._data1;
		}
		set
		{
			if ((this._data1 != value))
			{
				this.Ondata1Changing(value);
				this.SendPropertyChanging();
				this._data1 = value;
				this.SendPropertyChanged("data1");
				this.Ondata1Changed();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.foodWaste")]
public partial class foodWaste : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _datapointID;
	
	private System.DateTime _date;
	
	private double _weight;
	
	private double _percentGrains;
	
	private double _percentFruit;
	
	private double _percentVeg;
	
	private double _percentDairy;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OndatapointIDChanging(int value);
    partial void OndatapointIDChanged();
    partial void OndateChanging(System.DateTime value);
    partial void OndateChanged();
    partial void OnweightChanging(double value);
    partial void OnweightChanged();
    partial void OnpercentGrainsChanging(double value);
    partial void OnpercentGrainsChanged();
    partial void OnpercentFruitChanging(double value);
    partial void OnpercentFruitChanged();
    partial void OnpercentVegChanging(double value);
    partial void OnpercentVegChanged();
    partial void OnpercentDairyChanging(double value);
    partial void OnpercentDairyChanged();
    #endregion
	
	public foodWaste()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_datapointID", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int datapointID
	{
		get
		{
			return this._datapointID;
		}
		set
		{
			if ((this._datapointID != value))
			{
				this.OndatapointIDChanging(value);
				this.SendPropertyChanging();
				this._datapointID = value;
				this.SendPropertyChanged("datapointID");
				this.OndatapointIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="Date NOT NULL")]
	public System.DateTime date
	{
		get
		{
			return this._date;
		}
		set
		{
			if ((this._date != value))
			{
				this.OndateChanging(value);
				this.SendPropertyChanging();
				this._date = value;
				this.SendPropertyChanged("date");
				this.OndateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_weight", DbType="Float NOT NULL")]
	public double weight
	{
		get
		{
			return this._weight;
		}
		set
		{
			if ((this._weight != value))
			{
				this.OnweightChanging(value);
				this.SendPropertyChanging();
				this._weight = value;
				this.SendPropertyChanged("weight");
				this.OnweightChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_percentGrains", DbType="Float NOT NULL")]
	public double percentGrains
	{
		get
		{
			return this._percentGrains;
		}
		set
		{
			if ((this._percentGrains != value))
			{
				this.OnpercentGrainsChanging(value);
				this.SendPropertyChanging();
				this._percentGrains = value;
				this.SendPropertyChanged("percentGrains");
				this.OnpercentGrainsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_percentFruit", DbType="Float NOT NULL")]
	public double percentFruit
	{
		get
		{
			return this._percentFruit;
		}
		set
		{
			if ((this._percentFruit != value))
			{
				this.OnpercentFruitChanging(value);
				this.SendPropertyChanging();
				this._percentFruit = value;
				this.SendPropertyChanged("percentFruit");
				this.OnpercentFruitChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_percentVeg", DbType="Float NOT NULL")]
	public double percentVeg
	{
		get
		{
			return this._percentVeg;
		}
		set
		{
			if ((this._percentVeg != value))
			{
				this.OnpercentVegChanging(value);
				this.SendPropertyChanging();
				this._percentVeg = value;
				this.SendPropertyChanged("percentVeg");
				this.OnpercentVegChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_percentDairy", DbType="Float NOT NULL")]
	public double percentDairy
	{
		get
		{
			return this._percentDairy;
		}
		set
		{
			if ((this._percentDairy != value))
			{
				this.OnpercentDairyChanging(value);
				this.SendPropertyChanging();
				this._percentDairy = value;
				this.SendPropertyChanged("percentDairy");
				this.OnpercentDairyChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Projects")]
public partial class Project : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ProjectID;
	
	private int _DomainID;
	
	private string _Project_Name;
	
	private string _description;
	
	private string _Principal_Investigator;
	
	private System.Nullable<System.DateTime> _Date_Created;
	
	private System.Nullable<int> _number_of_users;
	
	private EntityRef<domain> _domain;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProjectIDChanging(int value);
    partial void OnProjectIDChanged();
    partial void OnDomainIDChanging(int value);
    partial void OnDomainIDChanged();
    partial void OnProject_NameChanging(string value);
    partial void OnProject_NameChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OnPrincipal_InvestigatorChanging(string value);
    partial void OnPrincipal_InvestigatorChanged();
    partial void OnDate_CreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDate_CreatedChanged();
    partial void Onnumber_of_usersChanging(System.Nullable<int> value);
    partial void Onnumber_of_usersChanged();
    #endregion
	
	public Project()
	{
		this._domain = default(EntityRef<domain>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectID", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int ProjectID
	{
		get
		{
			return this._ProjectID;
		}
		set
		{
			if ((this._ProjectID != value))
			{
				if (this._domain.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnProjectIDChanging(value);
				this.SendPropertyChanging();
				this._ProjectID = value;
				this.SendPropertyChanged("ProjectID");
				this.OnProjectIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DomainID", DbType="Int NOT NULL")]
	public int DomainID
	{
		get
		{
			return this._DomainID;
		}
		set
		{
			if ((this._DomainID != value))
			{
				this.OnDomainIDChanging(value);
				this.SendPropertyChanging();
				this._DomainID = value;
				this.SendPropertyChanged("DomainID");
				this.OnDomainIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Project Name]", Storage="_Project_Name", DbType="VarChar(50)")]
	public string Project_Name
	{
		get
		{
			return this._Project_Name;
		}
		set
		{
			if ((this._Project_Name != value))
			{
				this.OnProject_NameChanging(value);
				this.SendPropertyChanging();
				this._Project_Name = value;
				this.SendPropertyChanged("Project_Name");
				this.OnProject_NameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="VarChar(MAX)")]
	public string description
	{
		get
		{
			return this._description;
		}
		set
		{
			if ((this._description != value))
			{
				this.OndescriptionChanging(value);
				this.SendPropertyChanging();
				this._description = value;
				this.SendPropertyChanged("description");
				this.OndescriptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Principal Investigator]", Storage="_Principal_Investigator", DbType="VarChar(50)")]
	public string Principal_Investigator
	{
		get
		{
			return this._Principal_Investigator;
		}
		set
		{
			if ((this._Principal_Investigator != value))
			{
				this.OnPrincipal_InvestigatorChanging(value);
				this.SendPropertyChanging();
				this._Principal_Investigator = value;
				this.SendPropertyChanged("Principal_Investigator");
				this.OnPrincipal_InvestigatorChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Date Created]", Storage="_Date_Created", DbType="Date")]
	public System.Nullable<System.DateTime> Date_Created
	{
		get
		{
			return this._Date_Created;
		}
		set
		{
			if ((this._Date_Created != value))
			{
				this.OnDate_CreatedChanging(value);
				this.SendPropertyChanging();
				this._Date_Created = value;
				this.SendPropertyChanged("Date_Created");
				this.OnDate_CreatedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[number of users]", Storage="_number_of_users", DbType="Int")]
	public System.Nullable<int> number_of_users
	{
		get
		{
			return this._number_of_users;
		}
		set
		{
			if ((this._number_of_users != value))
			{
				this.Onnumber_of_usersChanging(value);
				this.SendPropertyChanging();
				this._number_of_users = value;
				this.SendPropertyChanged("number_of_users");
				this.Onnumber_of_usersChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="domain_Project", Storage="_domain", ThisKey="ProjectID", OtherKey="DomainID", IsForeignKey=true)]
	public domain domain
	{
		get
		{
			return this._domain.Entity;
		}
		set
		{
			domain previousValue = this._domain.Entity;
			if (((previousValue != value) 
						|| (this._domain.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._domain.Entity = null;
					previousValue.Project = null;
				}
				this._domain.Entity = value;
				if ((value != null))
				{
					value.Project = this;
					this._ProjectID = value.DomainID;
				}
				else
				{
					this._ProjectID = default(int);
				}
				this.SendPropertyChanged("domain");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.domains")]
public partial class domain : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _DomainID;
	
	private string _Domain_Name;
	
	private EntityRef<Project> _Project;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDomainIDChanging(int value);
    partial void OnDomainIDChanged();
    partial void OnDomain_NameChanging(string value);
    partial void OnDomain_NameChanged();
    #endregion
	
	public domain()
	{
		this._Project = default(EntityRef<Project>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DomainID", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int DomainID
	{
		get
		{
			return this._DomainID;
		}
		set
		{
			if ((this._DomainID != value))
			{
				this.OnDomainIDChanging(value);
				this.SendPropertyChanging();
				this._DomainID = value;
				this.SendPropertyChanged("DomainID");
				this.OnDomainIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Domain Name]", Storage="_Domain_Name", DbType="VarChar(50)")]
	public string Domain_Name
	{
		get
		{
			return this._Domain_Name;
		}
		set
		{
			if ((this._Domain_Name != value))
			{
				this.OnDomain_NameChanging(value);
				this.SendPropertyChanging();
				this._Domain_Name = value;
				this.SendPropertyChanged("Domain_Name");
				this.OnDomain_NameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="domain_Project", Storage="_Project", ThisKey="DomainID", OtherKey="ProjectID", IsUnique=true, IsForeignKey=false)]
	public Project Project
	{
		get
		{
			return this._Project.Entity;
		}
		set
		{
			Project previousValue = this._Project.Entity;
			if (((previousValue != value) 
						|| (this._Project.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Project.Entity = null;
					previousValue.domain = null;
				}
				this._Project.Entity = value;
				if ((value != null))
				{
					value.domain = this;
				}
				this.SendPropertyChanged("Project");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}
#pragma warning restore 1591
